{"version":3,"file":"static/js/Bids.9e69c28a.chunk.js","mappings":"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","sources":["components/BidLoader/index.tsx","constants/bidStatuse.ts","constants/bidType.ts","constants/badge.ts","store/bids/selectors.ts","components/Badge/index.tsx","components/TableBid/index.tsx","components/BidsTable/BidsTableHeader/index.tsx","components/BidsTable/index.tsx","components/BidsFilter/BidsFilterStatuses/index.tsx","components/BidsFilter/BidsFilterTypes/index.tsx","components/BidsFilter/index.tsx","components/Bids/index.tsx","pages/BidsPage.tsx","utils/parseISO.ts"],"sourcesContent":["import React from 'react';\r\nimport CircleLoader from '../CircleLoader';\r\n\r\nimport './styles.scss';\r\n\r\nconst BidLoader: React.FC = () => {\r\n    return (\r\n        <div className='bid-loader'>\r\n            <CircleLoader />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BidLoader;","export enum BID_STATUSE {\r\n    NEW = 'NEW',\r\n    COMPLETED = 'COMPLETED',\r\n    IN_WORK = 'IN_WORK'\r\n}\r\n\r\nexport const BID_STATUS_VALUES: { [key in BID_STATUSE]: string } = {\r\n    [BID_STATUSE.NEW]: 'Новая',\r\n    [BID_STATUSE.IN_WORK]: 'В работе',\r\n    [BID_STATUSE.COMPLETED]: 'Завершенная'\r\n}","export enum BID_TYPE {\r\n    BOOKING = 'BOOKING',\r\n    VIEWING = 'VIEWING'\r\n}\r\n\r\nexport const BID_TYPE_VALUE: { [key in BID_TYPE]: string } = {\r\n    [BID_TYPE.BOOKING]: 'Бронирование',\r\n    [BID_TYPE.VIEWING]: 'Просмотр'\r\n}\r\n","export enum BADGE {\r\n    NEW = 'NEW',\r\n    IN_WORK = 'IN_WORK',\r\n    COMPLETED = 'COMPLETED'\r\n}\r\nexport const BADGE_VALUE: { [key in BADGE]: string } = {\r\n    [BADGE.NEW]: 'Новая',\r\n    [BADGE.IN_WORK]: 'В работе',\r\n    [BADGE.COMPLETED]: 'Завершенная'\r\n}","import { RootState } from \"..\";\r\n\r\nexport const selectBids = (state: RootState) => state.bids;\r\n","import React from \"react\";\r\nimport { BADGE } from \"../../constants/badge\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype BadgeProps = {\r\n    type: BADGE;\r\n    text: string;\r\n};\r\n\r\nconst Badge: React.FC<BadgeProps> = ({ type, text }) => {\r\n    return <span className={`badge badge--${type}`}>{text}</span>;\r\n};\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\nimport { IBid, IBookingBid } from \"../../models/bid\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Badge from \"../Badge\";\r\nimport { BADGE, BADGE_VALUE } from \"../../constants/badge\";\r\nimport { BID_TYPE_VALUE } from \"../../constants/bidType\";\r\nimport { parseISO } from \"../../utils/parseISO\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst TableBid: React.FC<IBookingBid | IBid> = (bid) => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <tr onClick={() => navigate(`/property-shop/bid/${bid.id}`)} className=\"table-bid\">\r\n            <td className=\"table-bid__td\" data-label=\"ID\">\r\n                {bid.id}\r\n            </td>\r\n            <td className=\"table-bid__td\" data-label=\"Дата\">\r\n                {parseISO(bid.date).day}\r\n            </td>\r\n            <td className=\"table-bid__td\" data-label=\"Услуга\">\r\n                {BID_TYPE_VALUE[bid.type]}\r\n            </td>\r\n            <td className=\"table-bid__td\" data-label=\"Имя\">\r\n                <p>\r\n                    {bid.firstName} {bid.lastName}\r\n                </p>\r\n            </td>\r\n            <td className=\"table-bid__td\" data-label=\"Email\">\r\n                {bid.email}\r\n            </td>\r\n            <td className=\"table-bid__td\" data-label=\"Телефон\">\r\n                {bid.phone}\r\n            </td>\r\n            <td className=\"table-bid__td\" data-label=\"Статус\">\r\n                <Badge type={BADGE[bid.status]} text={BADGE_VALUE[bid.status]} />\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableBid;\r\n","import React from 'react'\r\n\r\nimport './styles.scss';\r\n\r\nconst BidsTableHeader: React.FC = () => {\r\n    return (\r\n        <thead className=\"bids-table-header\">\r\n            <tr className=\"bids-table-header__row\">\r\n                <th className=\"bids-table-header__th\" style={{ width: 70 }}>\r\n                    ID\r\n                </th>\r\n                <th className=\"bids-table-header__th\" style={{ width: 110 }}>\r\n                    дата\r\n                </th>\r\n                <th className=\"bids-table-header__th\" style={{ width: 170 }}>\r\n                    Услуга\r\n                </th>\r\n                <th className=\"bids-table-header__th\">имя</th>\r\n                <th className=\"bids-table-header__th\">email</th>\r\n                <th className=\"bids-table-header__th\">телефон</th>\r\n                <th className=\"bids-table-header__th\" style={{ width: 130 }}>\r\n                    статус\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default BidsTableHeader","import React from \"react\";\r\nimport { useAppDispatch } from \"../../hooks/useAppDispatch\";\r\nimport { useAppSelector } from \"../../hooks/useAppSelector\";\r\nimport { selectBids } from \"../../store/bids/selectors\";\r\nimport { fetchBids } from \"../../store/bids/thunks/fetchBids\";\r\nimport TableBid from \"../TableBid\";\r\nimport { ALERT } from \"../../constants/alertTypes\";\r\nimport Alert from \"../Alert\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Pagination from \"../Pagination\";\r\nimport BidsTableHeader from \"./BidsTableHeader\";\r\nimport BidLoader from \"../BidLoader\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst BidsTable: React.FC = () => {\r\n\r\n    const { isLoading, error, list, totalCount } = useAppSelector(selectBids);\r\n\r\n    const [searchParams] = useSearchParams();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const limit = 8;\r\n    const totalPages = Math.ceil(Number(totalCount) / limit);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchBids({ query: searchParams.toString(), limit }));\r\n    }, [dispatch, searchParams, limit]);\r\n\r\n    return (\r\n        <>\r\n            <table className=\"bids-table\">\r\n                <BidsTableHeader />\r\n                <tbody className=\"bids-table__body\">\r\n                    {!isLoading && list.map((bid) => <TableBid key={bid.id} {...bid} />)}\r\n                </tbody>\r\n            </table>\r\n            {error && <Alert type={ALERT.ERROR} message={error} />}\r\n            {!error && !isLoading && list.length < 1 && <Alert type={ALERT.INFO} message={\"Список заявок пуст.\"} /> }\r\n            {isLoading && <BidLoader />}\r\n            {totalPages > 1 && !isLoading && <Pagination limit={limit} totalPages={totalPages} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BidsTable;","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport cn from \"classnames\";\r\nimport { BID_STATUSE } from \"../../../constants/bidStatuse\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst BidsFilterStatuses: React.FC = () => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const handleStatusClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        const list = event.currentTarget;\r\n        const target = event.target as HTMLDivElement;\r\n\r\n        if (target.closest(\"[data-value]\")) {\r\n            const value = target.dataset.value as string;\r\n            list.querySelectorAll(\"[data-value]\").forEach((btn) => btn.classList.remove(\"active\"));\r\n            target.classList.add(\"active\");\r\n\r\n            if (value === \"ALL\") searchParams.delete(\"status\");\r\n            else searchParams.set(\"status\", value);\r\n\r\n            searchParams.delete(\"_page\");\r\n            setSearchParams(searchParams);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div onClick={handleStatusClick} className=\"bids-filter-statuses\">\r\n            <button className=\"bids-filter-statuses__btn\" data-value=\"ALL\">\r\n                Все\r\n            </button>\r\n            <button\r\n                className={cn('bids-filter-statuses__btn', { 'bids-filter-statuses__btn--active': searchParams.get(\"status\") === BID_STATUSE.NEW })}\r\n                data-value={BID_STATUSE.NEW}\r\n            >\r\n                Новые\r\n            </button>\r\n            <button\r\n                className={cn('bids-filter-statuses__btn', { 'bids-filter-statuses__btn--active': searchParams.get(\"status\") === BID_STATUSE.IN_WORK })}\r\n                data-value={BID_STATUSE.IN_WORK}\r\n            >\r\n                В работе\r\n            </button>\r\n            <button\r\n                className={cn('bids-filter-statuses__btn', { 'bids-filter-statuses__btn--active': searchParams.get(\"status\") === BID_STATUSE.COMPLETED })}\r\n                data-value={BID_STATUSE.COMPLETED}\r\n            >\r\n                Завершенные\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BidsFilterStatuses;\r\n","import React from 'react'\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport Select from '../../FormElements/Select';\r\n\r\nimport './styles.scss';\r\n\r\nconst BidsTypes: React.FC = () => {\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const handleTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value;\r\n\r\n        if (value === 'ALL') searchParams.delete('type');\r\n        else searchParams.set('type', value);\r\n        searchParams.delete('_page');\r\n        setSearchParams(searchParams);\r\n    }\r\n\r\n    return (\r\n        <Select\r\n            onChange={handleTypeChange} \r\n            className={'bids-filter-select'}\r\n            defaultValue={searchParams.has('type') ? searchParams.get('type') as string : 'ALL'}\r\n        >\r\n            <option value=\"ALL\">Все заявки</option>\r\n            <option value=\"BOOKING\">Бронирование</option>\r\n            <option value=\"VIEWING\">Просмотр</option>\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default BidsTypes","import React from \"react\";\r\nimport BidsFilterStatuses from \"./BidsFilterStatuses\";\r\nimport BidsFilterTypes from \"./BidsFilterTypes\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst BidsFilter: React.FC = () => {\r\n    return (\r\n        <div className=\"bids-filter\">\r\n            <BidsFilterStatuses />\r\n            <BidsFilterTypes />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BidsFilter;\r\n","import React from \"react\";\r\nimport BidsTable from \"../BidsTable\";\r\nimport BidsFilter from \"../BidsFilter\";\r\nimport MainTitle from \"../MainTitle\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Bids: React.FC = () => {\r\n    return (\r\n        <section className=\"bids\">\r\n            <div className=\"bids__content\">\r\n                <MainTitle text={'Все заявки'} className={'bids__title'} />\r\n                <BidsFilter />\r\n                <BidsTable />\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Bids;\r\n","import React from \"react\";\r\nimport Bids from \"../components/Bids\";\r\nimport Container from \"../components/Container\";\r\n\r\nconst BidsPage: React.FC = () => {\r\n    return (\r\n        <main className=\"main\">\r\n            <Container type={'fluid'}>\r\n                <Bids />\r\n            </Container>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default BidsPage;\r\n","type ParsedDate = {\r\n    day: string;\r\n    time: string;\r\n}\r\n\r\nexport const parseISO = (date: string): ParsedDate => {\r\n    let [day, time] = date.split('T');\r\n    day = day.split('-').reverse().join('.');\r\n    time = time.substring(0, 5);\r\n    return { day, time }\r\n}"],"names":["className","CircleLoader","BID_STATUSE","BID_STATUS_VALUES","NEW","IN_WORK","COMPLETED","BID_TYPE","BID_TYPE_VALUE","BOOKING","VIEWING","BADGE","selectBids","state","bids","type","text","BADGE_VALUE","bid","navigate","useNavigate","onClick","id","parseISO","date","day","firstName","lastName","email","phone","status","style","width","useAppSelector","isLoading","error","list","totalCount","useSearchParams","searchParams","dispatch","useAppDispatch","totalPages","Math","ceil","Number","React","fetchBids","query","toString","limit","map","Alert","ALERT","message","length","BidLoader","Pagination","setSearchParams","event","currentTarget","target","closest","value","dataset","querySelectorAll","forEach","btn","classList","remove","add","delete","set","cn","get","Select","onChange","defaultValue","has","BidsFilterTypes","MainTitle","Container","split","time","reverse","join","substring"],"sourceRoot":""}