{"version":3,"file":"static/js/BidEdit.307b995d.chunk.js","mappings":"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","sources":["components/BidLoader/index.tsx","components/Buttons/ActionButton/index.tsx","components/FormElements/FormErrorMessage/index.tsx","components/FullBid/BidFooter/index.tsx","components/FullBid/BidInfoRaw/index.tsx","constants/bidType.ts","constants/regExp.ts","store/bids/thunks/patchBid.ts","components/BidEdit/BookingBidEditForm/bookingEditScheme.ts","components/BidEdit/BidEditInputRaw/index.tsx","components/BidEdit/BookingBidEditForm/index.tsx","components/BidEdit/ViewingBidEditForm/viewingEditScheme.ts","components/BidEdit/ViewingBidEditForm/index.tsx","components/BidEdit/index.tsx","pages/BidEditPage.tsx","store/bids/thunks/fetchBidById.ts","utils/parseISO.ts"],"sourcesContent":["import React from 'react';\r\nimport CircleLoader from '../CircleLoader';\r\n\r\nimport './styles.scss';\r\n\r\nconst BidLoader: React.FC = () => {\r\n    return (\r\n        <div className='bid-loader'>\r\n            <CircleLoader />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BidLoader;","import React, { ButtonHTMLAttributes } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport cn from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\ninterface ActionButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    color: 'red' | 'yellow' | 'blue';\r\n    text: string;\r\n    to?: string;\r\n}\r\n\r\nconst ActionButton: React.FC<ActionButtonProps> = ({ color, text, to, className, ...props }) => {\r\n\r\n    return (\r\n        <>\r\n            {to ? (\r\n                    <Link \r\n                        to={to}\r\n                        className={cn('action-button', `action-button--${color}`, className)}\r\n                    >\r\n                        {text}\r\n                    </Link>\r\n                ) : (\r\n                    <button\r\n                        {...props}\r\n                        className={cn('action-button', `action-button--${color}`, className)}\r\n                    >\r\n                        {text}\r\n                    </button>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype FormErrorMessageProps = {\r\n    text: string;\r\n};\r\n\r\nconst FormErrorMessage: React.FC<FormErrorMessageProps> = ({ text }) => {\r\n    return <p className=\"form-error-message\">{text}</p>;\r\n};\r\n\r\nexport default FormErrorMessage;\r\n","import React from 'react'\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype BidFooterProps = {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst BidFooter: React.FC<BidFooterProps> = ({ children }) => {\r\n    return (\r\n        <footer className=\"bid-footer\">\r\n            {children}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default BidFooter","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype BidEditRawProps = {\r\n    rawName: string;\r\n    rawValue: string;\r\n    rawClassName?: string;\r\n}\r\n\r\nconst BidInfoRaw: React.FC<BidEditRawProps> = ({ rawName, rawValue, rawClassName }) => {\r\n    return (\r\n        <div className={cn('bid-info-raw', rawClassName)}>\r\n            <div className=\"bid-info-raw__name\">{rawName}</div>\r\n            <div className=\"bid-info-raw__value\">{rawValue}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BidInfoRaw;\r\n","export enum BID_TYPE {\r\n    BOOKING = 'BOOKING',\r\n    VIEWING = 'VIEWING'\r\n}\r\n\r\nexport const BID_TYPE_VALUE: { [key in BID_TYPE]: string } = {\r\n    [BID_TYPE.BOOKING]: 'Бронирование',\r\n    [BID_TYPE.VIEWING]: 'Просмотр'\r\n}\r\n","export const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;","import { createAppAsyncThunk } from \"../../createAppAsyncThunk\";\r\nimport { authApi } from \"../../../api\";\r\nimport { EditBookingValues } from \"../../../components/BidEdit/BookingBidEditForm\";\r\nimport { logoutUser } from \"../../user/userSlice\";\r\nimport { handleAuthError } from \"../../../utils/handleAuthError\";\r\n\r\ntype Response = {\r\n    message: string;\r\n};\r\n\r\nexport const patchBid = createAppAsyncThunk<Response, EditBookingValues>(\r\n    \"bids/patchBid\", async function (body, { rejectWithValue, dispatch }) {\r\n    try {\r\n        await authApi.patch<void>(`bids/${body.id}`, body);\r\n        return { message: \"Изменения сохранены\" };\r\n    } catch (error) {\r\n        const { isAuthError, message } = handleAuthError(error);\r\n        if (isAuthError){\r\n            dispatch(logoutUser());\r\n            return rejectWithValue({ message });\r\n        }\r\n        return rejectWithValue({ message: \"Не удалось сохранить изменения\" });\r\n    }\r\n});\r\n","import * as Yup from \"yup\";\r\nimport { phoneRegExp } from \"../../../constants/regExp\";\r\n\r\nexport const bookingEditScheme = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, \"Минимальное количество символов: 2\")\r\n        .max(35, \"Превышено максимальное количество символов\")\r\n        .required(\"Обязательное поле\"),\r\n    lastName: Yup.string()\r\n        .min(2, \"Минимальное количество символов: 2\")\r\n        .max(35, \"Превышено максимальное количество символов\")\r\n        .required(\"Обязательное поле\"),\r\n    email: Yup.string()\r\n        .email(\"Не корректный email\")\r\n        .required(\"Обязательное поле\"),\r\n    phone: Yup.string()\r\n        .matches(phoneRegExp, \"Не корректный номер телефона\")\r\n        .required(\"Обязательное поле\"),\r\n});","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype BidEditInputRawProps = {\r\n    labelText: string;\r\n    htmlFor: string;\r\n    children: React.ReactNode;\r\n    rawClassName?: string;\r\n};\r\n\r\nconst BidEditInputRaw: React.FC<BidEditInputRawProps> = ({ labelText, htmlFor, rawClassName, children }) => {\r\n    return (\r\n        <div className={cn(\"bid-edit-input-raw\", rawClassName)}>\r\n            <label className=\"bid-edit-input-raw__name\" htmlFor={htmlFor}>\r\n                {labelText}\r\n            </label>\r\n            <div className=\"bid-edit-input-raw__wrapper\">{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BidEditInputRaw;\r\n","import React from \"react\";\r\nimport { BID_STATUSE } from \"../../../constants/bidStatuse\";\r\nimport { IBookingBid } from \"../../../models/bid\";\r\nimport { Formik } from \"formik\";\r\nimport { useAppDispatch } from \"../../../hooks/useAppDispatch\";\r\nimport { patchBid } from \"../../../store/bids/thunks/patchBid\";\r\nimport { showNotion } from \"../../../utils/showNotion\";\r\nimport { NOTION } from \"../../../constants/notion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ActionButton from \"../../Buttons/ActionButton\";\r\nimport { bookingEditScheme } from \"./bookingEditScheme\";\r\nimport TextInput from \"../../FormElements/TextInput\";\r\nimport Select from \"../../FormElements/Select\";\r\nimport FormErrorMessage from \"../../FormElements/FormErrorMessage\";\r\nimport { BID_TYPE_VALUE } from \"../../../constants/bidType\";\r\nimport BidInfoRaw from \"../../FullBid/BidInfoRaw\";\r\nimport { parseISO } from \"../../../utils/parseISO\";\r\nimport BidFooter from \"../../FullBid/BidFooter\";\r\nimport BidEditInputRaw from \"../BidEditInputRaw\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport interface EditBookingValues {\r\n    id?: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: string;\r\n    status: BID_STATUSE;\r\n}\r\n\r\nconst BookingBidEditForm: React.FC<IBookingBid> = (bid) => {\r\n    const parsedDate = parseISO(bid.date);\r\n\r\n    const initialState: EditBookingValues = {\r\n        id: bid.id,\r\n        firstName: bid.firstName,\r\n        lastName: bid.lastName,\r\n        email: bid.email,\r\n        phone: bid.phone,\r\n        status: bid.status,\r\n    };\r\n\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (values: EditBookingValues) => {\r\n        try {\r\n            const response = await dispatch(patchBid(values)).unwrap();\r\n            showNotion(NOTION.SUCCESS, response.message);\r\n            navigate(-1);\r\n        } catch (error) {\r\n            const err = error as any;\r\n            showNotion(NOTION.ERROR, err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik initialValues={initialState} validationSchema={bookingEditScheme} onSubmit={handleSubmit}>\r\n            {({ handleSubmit, handleChange, handleBlur, values, errors, touched, isSubmitting }) => (\r\n                <form onSubmit={handleSubmit} className=\"bid-edit-booking-form\">\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-booking-form__info-raw\"\r\n                        rawName={\"ID:\"}\r\n                        rawValue={`Заявка №${bid.id}`}\r\n                    />\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-booking-form__info-raw\"\r\n                        rawName={\"Дата создания:\"}\r\n                        rawValue={`${parsedDate.day} ${parsedDate.time}`}\r\n                    />\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-booking-form__info-raw\"\r\n                        rawName={\"Услуга:\"}\r\n                        rawValue={BID_TYPE_VALUE[bid.type]}\r\n                    />\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-booking-form__input-raw\"\r\n                        labelText=\"Имя:\"\r\n                        htmlFor=\"bid-firstName\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-booking-form__input\"\r\n                            id=\"bid-firstName\"\r\n                            name=\"firstName\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.firstName}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Имя\"\r\n                        />\r\n                        {errors.firstName && touched.firstName && <FormErrorMessage text={errors.firstName} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-booking-form__input-raw\"\r\n                        labelText=\"Фамилия:\"\r\n                        htmlFor=\"bid-lastName\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-booking-form__input\"\r\n                            id=\"bid-lastName\"\r\n                            name=\"lastName\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.lastName}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Фамилия\"\r\n                        />\r\n                        {errors.lastName && touched.lastName && <FormErrorMessage text={errors.lastName} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-booking-form__input-raw\"\r\n                        labelText=\"Email:\"\r\n                        htmlFor=\"bid-email\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-booking-form__input\"\r\n                            id=\"bid-email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        {errors.email && touched.email && <FormErrorMessage text={errors.email} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-booking-form__input-raw\"\r\n                        labelText=\"Телефон:\"\r\n                        htmlFor=\"bid-phone\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-booking-form__input\"\r\n                            id=\"bid-phone\"\r\n                            name=\"phone\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.phone}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Телефон\"\r\n                        />\r\n                        {errors.phone && touched.phone && <FormErrorMessage text={errors.phone} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-booking-form__info-raw\"\r\n                        rawName={\"Дата рождения:\"}\r\n                        rawValue={bid.birthdate}\r\n                    />\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-booking-form__input-raw\"\r\n                        labelText=\"Статус заявки:\"\r\n                        htmlFor=\"bid-phone\"\r\n                    >\r\n                        <Select\r\n                            className=\"bid-edit-booking-form__select\"\r\n                            id=\"bid-status\"\r\n                            name=\"status\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.status}\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            <option value=\"NEW\">Новая</option>\r\n                            <option value=\"IN_WORK\">В работе</option>\r\n                            <option value=\"COMPLETED\">Завершенная</option>\r\n                        </Select>\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-booking-form__info-raw\"\r\n                        rawName={\"Сообщение:\"}\r\n                        rawValue={bid.comment}\r\n                    />\r\n\r\n                    <BidFooter>\r\n                        <ActionButton\r\n                            color={\"blue\"}\r\n                            text={\"Сохранить изменения\"}\r\n                            type={\"submit\"}\r\n                            disabled={isSubmitting}\r\n                        />\r\n                        <ActionButton\r\n                            color={\"yellow\"}\r\n                            text={\"Вернуться\"}\r\n                            type={\"button\"}\r\n                            onClick={() => navigate(-1)}\r\n                        />\r\n                    </BidFooter>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default BookingBidEditForm;\r\n","import * as Yup from \"yup\";\r\nimport { phoneRegExp } from \"../../../constants/regExp\";\r\n\r\nexport const viewingEditScheme = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, \"Минимальное количество символов: 2\")\r\n        .max(35, \"Превышено максимальное количество символов\")\r\n        .required(\"Обязательное поле\"),\r\n    lastName: Yup.string()\r\n        .min(2, \"Минимальное количество символов: 2\")\r\n        .max(35, \"Превышено максимальное количество символов\")\r\n        .required(\"Обязательное поле\"),\r\n    email: Yup.string()\r\n        .email(\"Не корректный email\")\r\n        .required(\"Обязательное поле\"),\r\n    phone: Yup.string()\r\n        .matches(phoneRegExp, \"Не корректный номер телефона\")\r\n        .required(\"Обязательное поле\"),\r\n});","import React from \"react\";\r\nimport { BID_STATUSE } from \"../../../constants/bidStatuse\";\r\nimport { IBid } from \"../../../models/bid\";\r\nimport { Formik } from \"formik\";\r\nimport { useAppDispatch } from \"../../../hooks/useAppDispatch\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { patchBid } from \"../../../store/bids/thunks/patchBid\";\r\nimport { showNotion } from \"../../../utils/showNotion\";\r\nimport { NOTION } from \"../../../constants/notion\";\r\nimport ActionButton from \"../../Buttons/ActionButton\";\r\nimport { viewingEditScheme } from \"./viewingEditScheme\";\r\nimport TextInput from \"../../FormElements/TextInput\";\r\nimport Select from \"../../FormElements/Select\";\r\nimport FormErrorMessage from \"../../FormElements/FormErrorMessage\";\r\nimport { BID_TYPE_VALUE } from \"../../../constants/bidType\";\r\nimport BidInfoRaw from \"../../FullBid/BidInfoRaw\";\r\nimport { parseISO } from \"../../../utils/parseISO\";\r\nimport BidFooter from \"../../FullBid/BidFooter\";\r\nimport BidEditInputRaw from \"../BidEditInputRaw\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport interface EditViewingValues {\r\n    id?: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: string;\r\n    status: BID_STATUSE;\r\n}\r\n\r\nconst ViewingBidEditForm: React.FC<IBid> = (bid) => {\r\n    const parsedDate = parseISO(bid.date);\r\n\r\n    const initialState: EditViewingValues = {\r\n        id: bid.id,\r\n        firstName: bid.firstName,\r\n        lastName: bid.lastName,\r\n        email: bid.email,\r\n        phone: bid.phone,\r\n        status: bid.status,\r\n    };\r\n\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (values: EditViewingValues) => {\r\n        try {\r\n            const response = await dispatch(patchBid(values)).unwrap();\r\n            showNotion(NOTION.SUCCESS, response.message);\r\n            navigate(-1);\r\n        } catch (error) {\r\n            const err = error as any;\r\n            showNotion(NOTION.ERROR, err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik initialValues={initialState} validationSchema={viewingEditScheme} onSubmit={handleSubmit}>\r\n            {({ handleSubmit, handleChange, handleBlur, values, errors, touched, isSubmitting }) => (\r\n                <form onSubmit={handleSubmit} className=\"bid-edit-viewing-form\">\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        rawName={\"ID:\"}\r\n                        rawValue={`Заявка №${bid.id}`}\r\n                    />\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        rawName={\"Дата создания:\"}\r\n                        rawValue={`${parsedDate.day} ${parsedDate.time}`}\r\n                    />\r\n                    <BidInfoRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        rawName={\"Услуга:\"}\r\n                        rawValue={BID_TYPE_VALUE[bid.type]}\r\n                    />\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        labelText=\"Имя:\"\r\n                        htmlFor=\"bid-firstName\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-viewing-form__input\"\r\n                            id=\"bid-firstName\"\r\n                            name=\"firstName\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.firstName}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Имя\"\r\n                        />\r\n                        {errors.firstName && touched.firstName && <FormErrorMessage text={errors.firstName} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        labelText=\"Фамилия:\"\r\n                        htmlFor=\"bid-lastName\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-viewing-form__input\"\r\n                            id=\"bid-lastName\"\r\n                            name=\"lastName\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.lastName}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Фамилия\"\r\n                        />\r\n                        {errors.lastName && touched.lastName && <FormErrorMessage text={errors.lastName} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        labelText=\"Email:\"\r\n                        htmlFor=\"bid-email\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-viewing-form__input\"\r\n                            id=\"bid-email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        {errors.email && touched.email && <FormErrorMessage text={errors.email} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        labelText=\"Телефон:\"\r\n                        htmlFor=\"bid-phone\"\r\n                    >\r\n                        <TextInput\r\n                            className=\"bid-edit-viewing-form__input\"\r\n                            id=\"bid-phone\"\r\n                            name=\"phone\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.phone}\r\n                            disabled={isSubmitting}\r\n                            placeholder=\"Телефон\"\r\n                        />\r\n                        {errors.phone && touched.phone && <FormErrorMessage text={errors.phone} />}\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidEditInputRaw\r\n                        rawClassName=\"bid-edit-viewing-form__input-raw\"\r\n                        labelText=\"Статус заявки:\"\r\n                        htmlFor=\"bid-phone\"\r\n                    >\r\n                        <Select\r\n                            className=\"bid-edit-viewing-form__select\"\r\n                            id=\"bid-status\"\r\n                            name=\"status\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.status}\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            <option value=\"NEW\">Новая</option>\r\n                            <option value=\"IN_WORK\">В работе</option>\r\n                            <option value=\"COMPLETED\">Завершенная</option>\r\n                        </Select>\r\n                    </BidEditInputRaw>\r\n\r\n                    <BidFooter>\r\n                        <ActionButton\r\n                            color={\"blue\"}\r\n                            text={\"Сохранить изменения\"}\r\n                            type={\"submit\"}\r\n                            disabled={isSubmitting}\r\n                        />\r\n                        <ActionButton\r\n                            color={\"yellow\"}\r\n                            text={\"Вернуться\"}\r\n                            type={\"button\"}\r\n                            onClick={() => navigate(-1)}\r\n                        />\r\n                    </BidFooter>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ViewingBidEditForm;\r\n","import React from \"react\";\r\nimport { BID_TYPE } from \"../../constants/bidType\";\r\nimport { IBid, IBookingBid } from \"../../models/bid\";\r\nimport BookingBidEditForm from \"./BookingBidEditForm\";\r\nimport ViewingBidEditForm from \"./ViewingBidEditForm\";\r\n\r\ntype BidEditProps = IBid | IBookingBid;\r\n\r\nconst BidEdit: React.FC<BidEditProps> = (bid) => {\r\n    return (\r\n        <>\r\n            {bid.type === BID_TYPE.BOOKING && <BookingBidEditForm {...(bid as IBookingBid)} />}\r\n            {bid.type === BID_TYPE.VIEWING && <ViewingBidEditForm {...bid} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BidEdit;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Alert from \"../components/Alert\";\r\nimport BidLoader from \"../components/BidLoader\";\r\nimport { ALERT } from \"../constants/alertTypes\";\r\nimport { useAppDispatch } from \"../hooks/useAppDispatch\";\r\nimport { IBid, IBookingBid } from \"../models/bid\";\r\nimport { fetchBidById } from \"../store/bids/thunks/fetchBidById\";\r\nimport BidEdit from \"../components/BidEdit\";\r\n\r\nconst BidEditPage: React.FC = () => {\r\n    const { id = \"\" } = useParams();\r\n\r\n    const [bid, setBid] = React.useState<IBid | IBookingBid | null>(null);\r\n    const [isLoading, setIsLoading] = React.useState<boolean>(true);\r\n    const [error, setError] = React.useState<string | null>(null);\r\n    const dispatch = useAppDispatch();\r\n\r\n    React.useEffect(() => {\r\n        setIsLoading(true);\r\n        dispatch(fetchBidById(id))\r\n            .unwrap()\r\n            .then((data) => {\r\n                setBid(data);\r\n                setError(null);\r\n            })\r\n            .catch((error) => {\r\n                setBid(null);\r\n                setError(error.message);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }, [dispatch, id]);\r\n\r\n    return (\r\n        <>\r\n            {error && <Alert type={ALERT.ERROR} message={error} />}\r\n            {isLoading && <BidLoader />}\r\n            {!isLoading && bid && <BidEdit {...bid} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BidEditPage;\r\n","import { createAppAsyncThunk } from \"../../createAppAsyncThunk\";\r\nimport { authApi } from \"../../../api\";\r\nimport { IBid, IBookingBid } from \"../../../models/bid\";\r\nimport { logoutUser } from \"../../user/userSlice\";\r\nimport { handleAuthError } from \"../../../utils/handleAuthError\";\r\n\r\nexport const fetchBidById = createAppAsyncThunk<IBid | IBookingBid, string>(\r\n    \"bids/fetchBidById\", async function (id, { rejectWithValue, dispatch }) {\r\n    try {\r\n        const response = await authApi.get<IBid | IBookingBid>(`bids/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        const { isAuthError, message } = handleAuthError(error);\r\n        if (isAuthError) dispatch(logoutUser());\r\n        return rejectWithValue({ message });\r\n    }\r\n});\r\n","type ParsedDate = {\r\n    day: string;\r\n    time: string;\r\n}\r\n\r\nexport const parseISO = (date: string): ParsedDate => {\r\n    let [day, time] = date.split('T');\r\n    day = day.split('-').reverse().join('.');\r\n    time = time.substring(0, 5);\r\n    return { day, time }\r\n}"],"names":["className","CircleLoader","color","text","to","props","cn","children","rawName","rawValue","rawClassName","BID_TYPE","BID_TYPE_VALUE","BOOKING","VIEWING","phoneRegExp","patchBid","createAppAsyncThunk","body","rejectWithValue","dispatch","authApi","id","message","handleAuthError","isAuthError","logoutUser","bookingEditScheme","Yup","shape","firstName","min","max","required","lastName","email","phone","matches","labelText","htmlFor","bid","parsedDate","parseISO","date","initialState","status","useAppDispatch","navigate","useNavigate","handleSubmit","values","unwrap","response","showNotion","NOTION","err","initialValues","validationSchema","onSubmit","handleChange","handleBlur","errors","touched","isSubmitting","BidInfoRaw","day","time","type","TextInput","name","onChange","onBlur","value","disabled","placeholder","FormErrorMessage","birthdate","Select","comment","BidFooter","ActionButton","onClick","viewingEditScheme","useParams","React","setBid","isLoading","setIsLoading","error","setError","fetchBidById","then","data","catch","finally","Alert","ALERT","BidLoader","split","reverse","join","substring"],"sourceRoot":""}